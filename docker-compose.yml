version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: nodebb
      POSTGRES_USER: nodebb
      POSTGRES_PASSWORD: nodebb123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nodebb -d nodebb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nodebb:
    build: .
    ports:
      - "4567:4567"
    environment:
      # NodeBB Configuration
      NODEBB_URL: http://localhost:4567
      NODEBB_DB: postgres
      # Navigation / theme locks
      NODEBB_NAV: top
      NODEBB_SIDEBAR: "false"
      NODEBB_ALLOW_USER_SKINS: "false"
      NODEBB_ALLOW_THEME_SWITCH: "false"
      # SSO (session sharing) basic config
      NODEBB_SSO_SECRET: a604917d01b7742cf166d7040a67e7fb29bccdda303719d5606e15acb03854d0
      
      # PostgreSQL Configuration
      NODEBB_DB_HOST: postgres
      NODEBB_DB_PORT: 5432
      NODEBB_DB_USER: nodebb
      NODEBB_DB_PASSWORD: nodebb123
      NODEBB_DB_NAME: nodebb
      
      # Redis Configuration
      NODEBB_REDIS_HOST: redis
      NODEBB_REDIS_PORT: 6379
      NODEBB_REDIS_PASSWORD: redis123
      
      # Admin Configuration
      NODEBB_ADMIN_USERNAME: admin
      NODEBB_ADMIN_PASSWORD: admin123
      NODEBB_ADMIN_EMAIL: admin@speek.local
    volumes:
      - nodebb_data:/app/public/uploads
      - nodebb_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  nodebb_data:
  nodebb_logs: